# -*- coding: utf-8 -*-
"""Global Air Quality Data EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WB9w2JAYhDsyf1CBkBbbJ1SxO7j57lER
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import calendar

df = pd.read_csv('city_day.csv')
df.head()

df.columns = df.columns.str.strip()
df["Date"] = pd.to_datetime(df["Date"])
df = df.dropna(subset=["AQI"])
df["Month"] = df["Date"].dt.month
df["Year"] = df["Date"].dt.year
df["DayOfWeek"] = df["Date"].dt.dayofweek
df["is_weekend"] = df["DayOfWeek"].isin([5, 6]).astype(int)

"""EDA"""

avg_aqi_by_city = df.groupby("City")["AQI"].mean().sort_values(ascending=False).round(2)
print(" Cities with the Highest Average AQI")
print(avg_aqi_by_city.head(10))

df_copy = df.copy()
df_copy["Season"] = df_copy["Date"].dt.month.apply(
    lambda x: "Winter" if x in [12, 1, 2] else "Monsoon" if x in [6, 7, 8, 9] else "Summer"
)
seasonal_aqi = df_copy.groupby("Season")["AQI"].mean().reindex(["Winter", "Summer", "Monsoon"])
print(" Average AQI by Season")
print(seasonal_aqi.round(2))
monthly_aqi = df.groupby("Month")["AQI"].mean()
print(" Average AQI by Month")
print(monthly_aqi.rename(index=lambda x: calendar.month_name[x]).round(2))

pollutants = ["PM2.5", "PM10", "NO", "NO2", "NOx", "NH3", "CO", "SO2", "O3", "Benzene", "Toluene", "Xylene"]
for col in pollutants:
    avg_level = df[col].mean()
    print(f"Average {col}: {avg_level:.2f}")

cleanest_city = avg_aqi_by_city.index[-1]
print(f"The city with the cleanest air on average is: {cleanest_city} with an average AQI of {avg_aqi_by_city.iloc[-1]:.2f}")

missing_values = df.isnull().sum()
print("Total missing values per column:")
print(missing_values[missing_values > 0].sort_values(ascending=False))

high_pollution_cities = df[df["AQI"] > 200].groupby("City").size().sort_values(ascending=False)
print(" Cities Consistently Exceeding Safe Pollution Limits (AQI > 200)")
print(high_pollution_cities.head(10))

avg_aqi_weekday_weekend = df.groupby("is_weekend")["AQI"].mean().round(2)
print("Average AQI for Weekdays (0):", avg_aqi_weekday_weekend[0])
print("Average AQI for Weekends (1):", avg_aqi_weekday_weekend[1])

"""Visualization"""

plt.figure(figsize=(12, 6))
top_10_polluted = avg_aqi_by_city.head(10)
sns.barplot(x=top_10_polluted.values, y=top_10_polluted.index, palette="viridis")
plt.title("Top 10 Most Polluted Cities by Average AQI")
plt.xlabel("Average AQI")
plt.ylabel("City")
plt.tight_layout()
plt.show()

selected_cities = ["Delhi", "Mumbai", "Bengaluru", "Chennai", "Aizawl"]
monthly_aqi_cities = df[df["City"].isin(selected_cities)].groupby(["City", "Month"])["AQI"].mean().reset_index()
plt.figure(figsize=(14, 8))
sns.lineplot(data=monthly_aqi_cities, x="Month", y="AQI", hue="City", marker="o")
plt.title("Monthly AQI Trends for Selected Cities")
plt.xlabel("Month")
plt.ylabel("Average AQI")
plt.xticks(np.arange(1, 13), labels=calendar.month_abbr[1:])
plt.grid(True)
plt.tight_layout()
plt.show()

corr_matrix = df[pollutants].corr()
plt.figure(figsize=(12, 10))
sns.heatmap(corr_matrix, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Matrix of Pollutants")
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 6))
sns.boxplot(x="Season", y="AQI", data=df_copy, order=["Winter", "Summer", "Monsoon"])
plt.title("Seasonal Comparison of Average AQI Levels")
plt.xlabel("Season")
plt.ylabel("Average AQI")
plt.tight_layout()
plt.show()

top_5_cities = avg_aqi_by_city.head(5).index
df_top5_cities = df[df["City"].isin(top_5_cities)]
avg_pollutants_top5 = df_top5_cities.groupby("City")[pollutants].mean().reset_index()
avg_pollutants_top5.set_index("City", inplace=True)
avg_pollutants_top5 = avg_pollutants_top5.div(avg_pollutants_top5.sum(axis=1), axis=0) * 100
avg_pollutants_top5.plot(kind="bar", stacked=True, figsize=(12, 8))
plt.title("Pollutant Contribution by City")
plt.xlabel("City")
plt.ylabel("Percentage Contribution")
plt.legend(title="Pollutants", bbox_to_anchor=(1.05, 1), loc="upper left")
plt.tight_layout()
plt.show()

plt.figure(figsize=(14, 8))
sns.boxplot(x="City", y="AQI", data=df[df["City"].isin(selected_cities)])
plt.title("Boxplot of AQI Across Major Cities")
plt.xlabel("City")
plt.ylabel("AQI")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()